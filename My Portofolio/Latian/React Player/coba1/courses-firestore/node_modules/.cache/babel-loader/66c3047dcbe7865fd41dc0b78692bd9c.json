{"ast":null,"code":"var _jsxFileName = \"D:\\\\Tonz\\\\Documents\\\\Codingan\\\\My Portofolio\\\\Latian\\\\Query Firebase\\\\coba1\\\\courses-firestore\\\\src\\\\pages\\\\chat.js\",\n    _s = $RefreshSig$();\n\nimport { async } from \"@firebase/util\";\nimport { addDoc, collection, doc, getDoc, onSnapshot, orderBy, query, setDoc, Timestamp, updateDoc } from \"firebase/firestore\";\nimport { getDownloadURL, ref, uploadBytes } from \"firebase/storage\";\nimport react, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Message from \"../components/Message\";\nimport MessageForm from \"../components/MessageForm\";\nimport { auth, db, storage } from \"../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Chat = () => {\n  _s();\n\n  const [selectedUser, setSelectedUser] = useState([]);\n  const [text, setText] = useState(\"\");\n  const [img, setImg] = useState(\"\");\n  const [msgs, setMsgs] = useState([]);\n  const {\n    id\n  } = useParams();\n  const user1 = auth.currentUser.uid;\n  const user2 = id;\n  const idMsg = user1 > user2 ? `${user1 + user2}` : `${user2 + user1}`;\n  const msgsRef = collection(db, \"messages\", idMsg, \"chat\");\n  const q = query(msgsRef, orderBy(\"createdAt\", \"asc\"));\n  useEffect(async () => {\n    getDoc(doc(db, \"users\", id)).then(doc => {\n      setSelectedUser(doc.data());\n    });\n    onSnapshot(q, querySnapshot => {\n      setMsgs(querySnapshot.docs.map(doc => doc.data()));\n    });\n  }, []);\n  console.log(selectedUser);\n  console.log(\"Set msg: \", msgs); // const viewMessages = async () => {\n  //   const msgsRef = collection(db, \"messages\", idMsg, \"chat\");\n  //   const q = query(msgsRef, orderBy(\"createdAt\", \"asc\"));\n  //   onSnapshot(q, (querySnapshot) => {\n  //     let msgs = [];\n  //     querySnapshot.forEach((doc) => {\n  //       msgs.push(doc.data());\n  //     });\n  //     setMsgs(msgs);\n  //   });\n  //   const docSnap = await getDoc(doc(db, \"lastMsg\", id));\n  //   if (docSnap.data() && docSnap.data().from !== user1) {\n  //     // update last message doc, set unread to false\n  //     await updateDoc(doc(db, \"lastMsg\", id), { unread: false });\n  //   }\n  // }\n  // viewMessages();\n  // viewMessages();\n  // console.log(chat);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const user2 = id;\n    const idMsg = user1 > user2 ? `${user1 + user2}` : `${user2 + user1}`;\n    let url;\n\n    if (img) {\n      const imgRef = ref(storage, `images/${new Date().getTime()} - ${img.name}`);\n      const snap = await uploadBytes(imgRef, img);\n      const dlUrl = await getDownloadURL(ref(storage, snap.ref.fullPath));\n      url = dlUrl;\n    }\n\n    await addDoc(collection(db, \"messages\", idMsg, \"chat\"), {\n      text,\n      from: user1,\n      to: user2,\n      createdAt: Timestamp.fromDate(new Date()),\n      media: url || \"\"\n    });\n    await setDoc(doc(db, \"lastMsg\", idMsg), {\n      text,\n      from: user1,\n      to: user2,\n      createdAt: Timestamp.fromDate(new Date()),\n      media: url || \"\",\n      unread: true\n    });\n    setText(\"\");\n    setImg(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"messages_container\",\n    children: selectedUser ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages_user\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: selectedUser.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"messages\",\n        children: msgs.length ? msgs.map((msg, i) => /*#__PURE__*/_jsxDEV(Message, {\n          msg: msg,\n          user1: user1\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 73\n        }, this)) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MessageForm, {\n        handleSubmit: handleSubmit,\n        text: text,\n        setText: setText,\n        setImg: setImg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"no_conv\",\n      children: \"Select a user to start conversation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chat, \"sz9BQFMf5gGQAxLixwAMtsj1FEM=\", false, function () {\n  return [useParams];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["async","addDoc","collection","doc","getDoc","onSnapshot","orderBy","query","setDoc","Timestamp","updateDoc","getDownloadURL","ref","uploadBytes","react","useEffect","useState","useParams","Message","MessageForm","auth","db","storage","Chat","selectedUser","setSelectedUser","text","setText","img","setImg","msgs","setMsgs","id","user1","currentUser","uid","user2","idMsg","msgsRef","q","then","data","querySnapshot","docs","map","console","log","handleSubmit","e","preventDefault","url","imgRef","Date","getTime","name","snap","dlUrl","fullPath","from","to","createdAt","fromDate","media","unread","length","msg","i"],"sources":["D:/Tonz/Documents/Codingan/My Portofolio/Latian/Query Firebase/coba1/courses-firestore/src/pages/chat.js"],"sourcesContent":["import { async } from \"@firebase/util\";\r\nimport { addDoc, collection, doc, getDoc, onSnapshot, orderBy, query, setDoc, Timestamp, updateDoc } from \"firebase/firestore\";\r\nimport { getDownloadURL, ref, uploadBytes } from \"firebase/storage\";\r\nimport react, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Message from \"../components/Message\";\r\nimport MessageForm from \"../components/MessageForm\";\r\nimport { auth, db, storage } from \"../firebase\";\r\n\r\nconst Chat = () => {\r\n  const [selectedUser, setSelectedUser] = useState([]);\r\n  const [text, setText] = useState(\"\");\r\n  const [img, setImg] = useState(\"\");\r\n  const [msgs, setMsgs] = useState([]);\r\n  const { id } = useParams();\r\n\r\n  const user1 = auth.currentUser.uid;\r\n  const user2 = id;\r\n  const idMsg = user1 > user2 ? `${user1 + user2}` : `${user2 + user1}`;\r\n  const msgsRef = collection(db, \"messages\", idMsg, \"chat\");\r\n  const q = query(msgsRef, orderBy(\"createdAt\", \"asc\"));\r\n\r\n  useEffect(async () => {\r\n    getDoc(doc(db, \"users\", id)).then((doc) => {\r\n      setSelectedUser(doc.data());\r\n    });\r\n    onSnapshot(q, (querySnapshot) => {\r\n      setMsgs(querySnapshot.docs.map((doc) => doc.data()));\r\n    });\r\n  }, []);\r\n  console.log(selectedUser);\r\n\r\n  console.log(\"Set msg: \", msgs);\r\n\r\n  // const viewMessages = async () => {\r\n  //   const msgsRef = collection(db, \"messages\", idMsg, \"chat\");\r\n  //   const q = query(msgsRef, orderBy(\"createdAt\", \"asc\"));\r\n\r\n  //   onSnapshot(q, (querySnapshot) => {\r\n  //     let msgs = [];\r\n  //     querySnapshot.forEach((doc) => {\r\n  //       msgs.push(doc.data());\r\n  //     });\r\n  //     setMsgs(msgs);\r\n  //   });\r\n\r\n  //   const docSnap = await getDoc(doc(db, \"lastMsg\", id));\r\n  //   if (docSnap.data() && docSnap.data().from !== user1) {\r\n  //     // update last message doc, set unread to false\r\n  //     await updateDoc(doc(db, \"lastMsg\", id), { unread: false });\r\n  //   }\r\n  // }\r\n  // viewMessages();\r\n  // viewMessages();\r\n  // console.log(chat);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const user2 = id;\r\n    const idMsg = user1 > user2 ? `${user1 + user2}` : `${user2 + user1}`;\r\n\r\n    let url;\r\n    if (img) {\r\n      const imgRef = ref(storage, `images/${new Date().getTime()} - ${img.name}`);\r\n      const snap = await uploadBytes(imgRef, img);\r\n      const dlUrl = await getDownloadURL(ref(storage, snap.ref.fullPath));\r\n      url = dlUrl;\r\n    }\r\n\r\n    await addDoc(collection(db, \"messages\", idMsg, \"chat\"), {\r\n      text,\r\n      from: user1,\r\n      to: user2,\r\n      createdAt: Timestamp.fromDate(new Date()),\r\n      media: url || \"\",\r\n    });\r\n\r\n    await setDoc(doc(db, \"lastMsg\", idMsg), {\r\n      text,\r\n      from: user1,\r\n      to: user2,\r\n      createdAt: Timestamp.fromDate(new Date()),\r\n      media: url || \"\",\r\n      unread: true,\r\n    });\r\n\r\n    setText(\"\");\r\n    setImg(\"\");\r\n  };\r\n  return (\r\n    <div className=\"messages_container\">\r\n      {selectedUser ? (\r\n        <>\r\n          <div className=\"messages_user\">\r\n            <h3>{selectedUser.name}</h3>\r\n          </div>\r\n          <div className=\"messages\">{msgs.length ? msgs.map((msg, i) => <Message key={i} msg={msg} user1={user1} />) : null}</div>\r\n          <MessageForm handleSubmit={handleSubmit} text={text} setText={setText} setImg={setImg} />\r\n        </>\r\n      ) : (\r\n        <h3 className=\"no_conv\">Select a user to start conversation</h3>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}